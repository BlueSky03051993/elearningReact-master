[{"D:\\React\\DuAnCuoiKhoa\\elearning\\src\\index.js":"1","D:\\React\\DuAnCuoiKhoa\\elearning\\src\\App.js":"2","D:\\React\\DuAnCuoiKhoa\\elearning\\src\\reportWebVitals.js":"3","D:\\React\\DuAnCuoiKhoa\\elearning\\src\\redux\\index.js":"4","D:\\React\\DuAnCuoiKhoa\\elearning\\src\\pages\\HomeAdmin\\index.jsx":"5","D:\\React\\DuAnCuoiKhoa\\elearning\\src\\pages\\Home\\index.jsx":"6","D:\\React\\DuAnCuoiKhoa\\elearning\\src\\redux\\reducers\\admin.js":"7","D:\\React\\DuAnCuoiKhoa\\elearning\\src\\redux\\constants\\index.js":"8","D:\\React\\DuAnCuoiKhoa\\elearning\\src\\redux\\constants\\adminConstants.js":"9","D:\\React\\DuAnCuoiKhoa\\elearning\\src\\redux\\constants\\roleConstants.js":"10","D:\\React\\DuAnCuoiKhoa\\elearning\\src\\redux\\actions\\index.js":"11","D:\\React\\DuAnCuoiKhoa\\elearning\\src\\components\\Breadcrumb\\index.jsx":"12","D:\\React\\DuAnCuoiKhoa\\elearning\\src\\HOCs\\Admin\\index.jsx":"13","D:\\React\\DuAnCuoiKhoa\\elearning\\src\\HOCs\\Admin\\style.js":"14","D:\\React\\DuAnCuoiKhoa\\elearning\\src\\components\\Table\\index.jsx":"15","D:\\React\\DuAnCuoiKhoa\\elearning\\src\\pages\\Content\\index.jsx":"16","D:\\React\\DuAnCuoiKhoa\\elearning\\src\\pages\\add\\index.jsx":"17","D:\\React\\DuAnCuoiKhoa\\elearning\\src\\pages\\Add\\index.jsx":"18","D:\\React\\DuAnCuoiKhoa\\elearning\\src\\pages\\Edit\\index.jsx":"19","D:\\React\\DuAnCuoiKhoa\\elearning\\src\\components\\Add\\index.jsx":"20","D:\\React\\DuAnCuoiKhoa\\elearning\\src\\pages\\Delete\\index.jsx":"21","D:\\React\\DuAnCuoiKhoa\\elearning\\src\\components\\Edit\\index.jsx":"22","D:\\React\\DuAnCuoiKhoa\\elearning\\src\\pages\\Signup\\index.jsx":"23","D:\\React\\DuAnCuoiKhoa\\elearning\\src\\pages\\Signin\\index.jsx":"24","D:\\React\\DuAnCuoiKhoa\\elearning\\src\\redux\\constants\\loginConstants.js":"25","D:\\React\\DuAnCuoiKhoa\\elearning\\src\\redux\\reducers\\login.js":"26","D:\\React\\DuAnCuoiKhoa\\elearning\\src\\components\\HeaderAdmin\\index.jsx":"27","D:\\React\\DuAnCuoiKhoa\\elearning\\src\\components\\NavbarAdmin\\index.jsx":"28","D:\\React\\DuAnCuoiKhoa\\elearning\\src\\components\\Header\\index.jsx":"29","D:\\React\\DuAnCuoiKhoa\\elearning\\src\\HOCs\\Layout\\index.jsx":"30","D:\\React\\DuAnCuoiKhoa\\elearning\\src\\HOCs\\Layout\\style.js":"31"},{"size":616,"mtime":1610180812019,"results":"32","hashOfConfig":"33"},{"size":963,"mtime":1610892941574,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"35","hashOfConfig":"33"},{"size":458,"mtime":1610964921453,"results":"36","hashOfConfig":"33"},{"size":1135,"mtime":1610891786149,"results":"37","hashOfConfig":"33"},{"size":178,"mtime":1610966802184,"results":"38","hashOfConfig":"33"},{"size":368,"mtime":1610891314038,"results":"39","hashOfConfig":"33"},{"size":396,"mtime":1610964863474,"results":"40","hashOfConfig":"33"},{"size":279,"mtime":1610385614194,"results":"41","hashOfConfig":"33"},{"size":49,"mtime":1610181169633,"results":"42","hashOfConfig":"33"},{"size":129,"mtime":1610180894974,"results":"43","hashOfConfig":"33"},{"size":1176,"mtime":1610892637623,"results":"44","hashOfConfig":"33"},{"size":830,"mtime":1610966571408,"results":"45","hashOfConfig":"33"},{"size":3358,"mtime":1610897239931,"results":"46","hashOfConfig":"33"},{"size":9238,"mtime":1610891466150,"results":"47","hashOfConfig":"33"},{"size":686,"mtime":1610891936434,"results":"48","hashOfConfig":"33"},{"size":291,"mtime":1610293558103,"results":"49","hashOfConfig":"33"},{"size":459,"mtime":1610892492314,"results":"50","hashOfConfig":"33"},{"size":475,"mtime":1610892580243,"results":"51","hashOfConfig":"33"},{"size":7820,"mtime":1610891115522,"results":"52","hashOfConfig":"33"},{"size":671,"mtime":1610560825564,"results":"53","hashOfConfig":"33"},{"size":6178,"mtime":1610707799355,"results":"54","hashOfConfig":"33"},{"size":5699,"mtime":1610950565409,"results":"55","hashOfConfig":"33"},{"size":3991,"mtime":1610965452992,"results":"56","hashOfConfig":"33"},{"size":127,"mtime":1610964849709,"results":"57","hashOfConfig":"33"},{"size":356,"mtime":1610964887192,"results":"58","hashOfConfig":"33"},{"size":1541,"mtime":1610966531658,"results":"59","hashOfConfig":"33"},{"size":2434,"mtime":1610966542788,"results":"60","hashOfConfig":"33"},{"size":3582,"mtime":1610969728388,"results":"61","hashOfConfig":"33"},{"size":219,"mtime":1610966770037,"results":"62","hashOfConfig":"33"},{"size":268,"mtime":1610969294669,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"rlcvo2",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React\\DuAnCuoiKhoa\\elearning\\src\\index.js",[],["134","135"],"D:\\React\\DuAnCuoiKhoa\\elearning\\src\\App.js",[],"D:\\React\\DuAnCuoiKhoa\\elearning\\src\\reportWebVitals.js",[],"D:\\React\\DuAnCuoiKhoa\\elearning\\src\\redux\\index.js",[],"D:\\React\\DuAnCuoiKhoa\\elearning\\src\\pages\\HomeAdmin\\index.jsx",[],"D:\\React\\DuAnCuoiKhoa\\elearning\\src\\pages\\Home\\index.jsx",[],"D:\\React\\DuAnCuoiKhoa\\elearning\\src\\redux\\reducers\\admin.js",[],"D:\\React\\DuAnCuoiKhoa\\elearning\\src\\redux\\constants\\index.js",[],"D:\\React\\DuAnCuoiKhoa\\elearning\\src\\redux\\constants\\adminConstants.js",[],"D:\\React\\DuAnCuoiKhoa\\elearning\\src\\redux\\constants\\roleConstants.js",[],"D:\\React\\DuAnCuoiKhoa\\elearning\\src\\redux\\actions\\index.js",[],"D:\\React\\DuAnCuoiKhoa\\elearning\\src\\components\\Breadcrumb\\index.jsx",["136","137","138","139"],"import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Constants from '../../redux/constants';\r\nimport createAction from '../../redux/actions';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nexport default function AdminBreadcrumbs({ path, extension }) {\r\n  const history = useHistory();\r\n  const content = ['category', 'course', 'video', 'target', 'user', 'role'];\r\n  const onGoHome = () => {\r\n    history.push('/admin');\r\n  }\r\n  const handlePage = (text) => () => {\r\n    history.push(`/admin/${text}`);\r\n  }\r\n  return (\r\n    <Breadcrumbs aria-label=\"breadcrumb\">\r\n      <Link color=\"inherit\" onClick={onGoHome} style={{ textDecoration: 'none' }}>\r\n        Home\r\n      </Link>\r\n      {\r\n        content.includes(path) &&\r\n        <Link color=\"inherit\" onClick={handlePage(path)} style={{ textDecoration: 'none' }}>\r\n          {path}\r\n        </Link>\r\n      }\r\n\r\n      {\r\n        extension && \r\n        <Typography color=\"inherit\">\r\n          {extension}\r\n        </Typography>\r\n      }\r\n    </Breadcrumbs>\r\n  );\r\n}","D:\\React\\DuAnCuoiKhoa\\elearning\\src\\HOCs\\Admin\\index.jsx",["140"],"D:\\React\\DuAnCuoiKhoa\\elearning\\src\\HOCs\\Admin\\style.js",[],"D:\\React\\DuAnCuoiKhoa\\elearning\\src\\components\\Table\\index.jsx",["141","142","143","144","145","146","147","148"],"import React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { useStyles } from '../../HOCs/Admin/style';\r\nimport axios from 'axios';\r\nimport { Table, Button, Typography, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, TableSortLabel, Toolbar, TablePagination, IconButton, Tooltip } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n    return order === 'desc'\r\n        ? (a, b) => descendingComparator(a, b, orderBy)\r\n        : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n    const stabilizedThis = array.map((el, index) => [el, index]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = comparator(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\n\r\n\r\nfunction EnhancedTableHead(props) {\r\n    const { classes, order, orderBy, onRequestSort, headCells } = props;\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                {headCells.map(headCell => (\r\n                    <TableCell\r\n                        key={headCell}\r\n                        align='left'\r\n                        padding='none'\r\n                        sortDirection={orderBy === headCell ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell}\r\n                            direction={orderBy === headCell ? order : 'asc'}\r\n                            onClick={createSortHandler(headCell)}\r\n                        >\r\n                            {headCell.toUpperCase()}\r\n                            {orderBy === headCell ? (\r\n                                <span className={classes.visuallyHidden}>\r\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                                </span>\r\n                            ) : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n                <TableCell align='left' >\r\n                    ACTION\r\n                </TableCell>\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    onRequestSort: PropTypes.func.isRequired,\r\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    orderBy: PropTypes.string.isRequired,\r\n    headCells: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default function EnhancedTable({ content }) {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [order, setOrder] = useState('asc');\r\n    const [orderBy, setOrderBy] = useState('id');\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(5);\r\n    const [table, setTable] = useState(null);\r\n\r\n    const headCells = useMemo(() => table ? Object.getOwnPropertyNames(table[0]) : [], [table]);\r\n\r\n    const handlePage = useCallback(text => () => {\r\n        history.push(`/admin/${content}/${text}`);\r\n    }, [content]);\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            const res = await axios({\r\n                url: `http://localhost:8080/api/admin/${content}`,\r\n                method: 'GET'\r\n            })\r\n            setTable(res.data);\r\n        } catch (error) {\r\n            console.log({ ...error });\r\n        }\r\n    }, [content]);\r\n\r\n    const handleRequestSort = useCallback((property) => {\r\n        const isAsc = orderBy === property && order === 'asc';\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(property);\r\n    }, []);\r\n\r\n    const handleChangePage = useCallback((newPage) => {\r\n        setPage(newPage);\r\n    }, []);\r\n\r\n    const handleChangeRowsPerPage = useCallback((event) => {\r\n        setRowsPerPage(parseInt(event.target.value, 10));\r\n        setPage(0);\r\n    }, []);\r\n\r\n    return (\r\n        <div className={classes.rootTable}>\r\n            <Typography variant='h3' component='h3' align='center'>\r\n                {content.toUpperCase()} LIST\r\n            </Typography>\r\n            <Button\r\n                className={classes.button}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handlePage('add')}\r\n                startIcon={<AddIcon />}\r\n            >\r\n                ADD\r\n            </Button>\r\n            <div className={classes.rootTable}>\r\n                <Paper className={classes.paper}>\r\n                    <TableContainer className={classes.rootTable}>\r\n                        <Table\r\n                            className={classes.table} aria-labelledby=\"tableTitle\"\r\n                            size='small'\r\n                            aria-label=\"enhanced table\"\r\n                        >\r\n                            <EnhancedTableHead\r\n                                classes={classes}\r\n                                order={order}\r\n                                orderBy={orderBy}\r\n                                onRequestSort={handleRequestSort}\r\n                                headCells={headCells}\r\n                            />\r\n                            <TableBody>\r\n                                {\r\n                                    table &&\r\n                                    stableSort(table, getComparator(order, orderBy))\r\n                                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                        .map((row, index) => (\r\n                                            <TableRow\r\n                                                hover\r\n                                                tabIndex={-1}\r\n                                                key={index}\r\n                                            >\r\n                                                {Object.getOwnPropertyNames(row).map((item, i) =>\r\n                                                    <TableCell component={i === 0 ? 'th' : ''} scope={i === 0 ? 'row' : ''} align={i === 0 ? '' : 'left'} key={i} >\r\n                                                        {row[item]}\r\n                                                    </TableCell>\r\n                                                )}\r\n                                                <TableCell align=\"left\" padding='none'>\r\n                                                    <Button\r\n                                                        className={classes.button}\r\n                                                        variant=\"contained\"\r\n                                                        color=\"primary\"\r\n                                                        onClick={handlePage(`edit/${row.id}`)}\r\n                                                        key={index}\r\n                                                        startIcon={<EditIcon />}\r\n                                                    >\r\n                                                        EDIT\r\n                                                        </Button>\r\n                                                    <Button\r\n                                                        variant=\"contained\"\r\n                                                        color=\"secondary\"\r\n                                                        className={classes.button}\r\n                                                        startIcon={<DeleteIcon />}\r\n                                                        key={-index - 1}\r\n                                                        onClick={handlePage(`delete/${row.id}`)}\r\n                                                    >\r\n                                                        Delete\r\n                                                        </Button>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))\r\n                                }\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                    <TablePagination\r\n                        rowsPerPageOptions={[5, 10, 25]}\r\n                        component=\"div\"\r\n                        count={table?.length}\r\n                        rowsPerPage={rowsPerPage}\r\n                        page={page}\r\n                        onChangePage={handleChangePage}\r\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    />\r\n                </Paper>\r\n            </div>\r\n        </div>\r\n    );\r\n}","D:\\React\\DuAnCuoiKhoa\\elearning\\src\\pages\\Content\\index.jsx",["149","150","151","152","153"],"import axios from 'axios';\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { useParams } from 'react-router-dom'\r\nimport AdminBreadcrumbs from '../../components/Breadcrumb';\r\nimport EnhancedTable from '../../components/Table';\r\nimport Admin from '../../HOCs/Admin'\r\nimport createAction from '../../redux/actions';\r\nimport Constants from '../../redux/constants';\r\n\r\nexport default function Content() {\r\n    const { content } = useParams();\r\n    const dispatch = useDispatch();\r\n\r\n    \r\n    return (\r\n        <Admin>\r\n            <AdminBreadcrumbs path={content}/>\r\n            <EnhancedTable content={content}/>\r\n        </Admin>\r\n    )\r\n}\r\n","D:\\React\\DuAnCuoiKhoa\\elearning\\src\\pages\\add\\index.jsx",[],"D:\\React\\DuAnCuoiKhoa\\elearning\\src\\pages\\Add\\index.jsx",[],"D:\\React\\DuAnCuoiKhoa\\elearning\\src\\pages\\Edit\\index.jsx",[],"D:\\React\\DuAnCuoiKhoa\\elearning\\src\\components\\Add\\index.jsx",["154","155","156","157","158"],"import React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport { useFormik } from \"formik\";\r\nimport { useStyles } from '../../HOCs/Admin/style';\r\nimport { Button, FormControl, Grid, IconButton, InputAdornment, InputLabel, MenuItem, OutlinedInput, Select, TextField, Typography } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\r\n\r\nexport default function AddForm({ content }) {\r\n    const addForm = useMemo(() => ({\r\n        category: ['title', 'icon'],\r\n        course: [\r\n            'categoryId',\r\n            'content',\r\n            'description',\r\n            'discount',\r\n            'image',\r\n            'leturesCount',\r\n            'price',\r\n            'promotionPrice',\r\n            'title',\r\n        ],\r\n        role: ['name', 'description'],\r\n        target: ['title', 'courseId'],\r\n        user: [\r\n            'address',\r\n            'avatar',\r\n            'email',\r\n            'fullname',\r\n            'password',\r\n            'phone',\r\n            'roleId',\r\n        ],\r\n        video: [\r\n            'courseId',\r\n            'timeCount',\r\n            'title',\r\n            'url',\r\n        ]\r\n    }), []);\r\n\r\n    const [selected, setSelected] = useState(null);\r\n    const classes = useStyles();\r\n    const [open, setOpen] = useState(false);\r\n    const history = useHistory();\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    let form = {};\r\n\r\n    useEffect(() => {\r\n        addForm[content].map(async (input) => {\r\n            if (input.endsWith('Id')) {\r\n                try {\r\n                    const res = await axios({\r\n                        url: `http://localhost:8080/api/admin/${input.replace(\"Id\", \"\")}`,\r\n                        method: 'GET'\r\n                    })\r\n\r\n                    setSelected(res.data);\r\n                } catch (error) {\r\n                    console.log({ ...error });\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        addForm[content].map(item => {\r\n            form = { ...form, [item]: '' }\r\n        });\r\n\r\n    }, [content]);\r\n\r\n    const handleClose = useCallback(() => {\r\n        setOpen(false);\r\n    }, []);\r\n\r\n    const handleOpen = useCallback(() => {\r\n        setOpen(true);\r\n    }, []);\r\n\r\n    const { handleChange, values } = useFormik({\r\n        initialValues: { ...form },\r\n    });\r\n\r\n    const handleSubmit = useCallback(async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            const res = await axios({\r\n                url: `http://localhost:8080/api/admin/${content}`,\r\n                method: 'POST',\r\n                data: values\r\n            })\r\n            history.push(`/admin/${content}`);\r\n        } catch (error) {\r\n            console.log({ ...error });\r\n        }\r\n    }, [content]);\r\n\r\n    const handlePassword = useCallback(() => {\r\n        setShowPassword(!showPassword);\r\n    }, []);\r\n\r\n    return (\r\n        <div className={classes.addForm}>\r\n            <Typography variant='h3' component='h3'> ADD NEW {content.toUpperCase()} </Typography>\r\n            <form onSubmit={handleSubmit} className={classes.formAdd}>\r\n                <Grid container spacing={1}>\r\n                    {addForm[content].map(input => {\r\n                        if (input.endsWith('Id')) {\r\n                            return <Grid item xs={6}>\r\n                                <FormControl className={classes.formAdd} variant=\"outlined\">\r\n                                    <InputLabel id=\"demo-simple-select-outlined-label\">{input.replace(\"Id\", \"\")}</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-outlined-label\"\r\n                                        id=\"demo-simple-select-outlined\"\r\n                                        open={open}\r\n                                        onClose={handleClose}\r\n                                        onOpen={handleOpen}\r\n                                        name={input}\r\n                                        onChange={handleChange}\r\n                                        label={input.replace(\"Id\", \"\")}\r\n                                    >\r\n                                        <MenuItem value=\"\">\r\n                                            <em>None</em>\r\n                                        </MenuItem>\r\n                                        {selected?.map(select =>\r\n                                            <MenuItem value={select.id} key={select.id}>\r\n                                                {select.title || select.description}\r\n                                            </MenuItem>\r\n                                        )}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>;\r\n                        } else if (input === 'password') {\r\n                            return <Grid item xs={6}>\r\n                                <FormControl className={classes.formAdd} variant=\"outlined\">\r\n                                    <InputLabel id=\"demo-simple-select-outlined-label\">{input}</InputLabel>\r\n                                    <OutlinedInput\r\n                                        key={input}\r\n                                        fullWidth\r\n                                        id=\"outlined-basic\"\r\n                                        label={input}\r\n                                        variant=\"outlined\"\r\n                                        onChange={handleChange}\r\n                                        name={input}\r\n                                        type={showPassword ? 'text' : \"password\"}\r\n                                        endAdornment={\r\n                                            <InputAdornment position=\"end\">\r\n                                                <IconButton\r\n                                                    aria-label=\"toggle password visibility\"\r\n                                                    onClick={handlePassword}\r\n                                                    edge=\"end\"\r\n                                                >\r\n                                                    {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                                </IconButton>\r\n                                            </InputAdornment>\r\n                                        }\r\n                                    />\r\n                                </FormControl>\r\n                            </Grid>;\r\n                        } else {\r\n                            return <Grid item xs={6}>\r\n                                <TextField\r\n                                    key={input}\r\n                                    fullWidth\r\n                                    id=\"outlined-basic\"\r\n                                    label={input}\r\n                                    variant=\"outlined\"\r\n                                    onChange={handleChange}\r\n                                    name={input}\r\n                                />\r\n                            </Grid>;\r\n                        }\r\n                    })}\r\n                </Grid>\r\n                <div className={classes.middleButton}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"large\"\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                        type=\"submit\"\r\n                    >\r\n                        Save\r\n                </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","D:\\React\\DuAnCuoiKhoa\\elearning\\src\\pages\\Delete\\index.jsx",["159","160"],"import axios from 'axios';\r\nimport React, { useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\n\r\nexport default function Delete() {\r\n    const history = useHistory();\r\n    const { content, id } = useParams();\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            const res = await axios({\r\n                url: `http://localhost:8080/api/admin/${content}/${id}`,\r\n                method: 'DELETE'\r\n            });\r\n\r\n            console.log(res);\r\n        } catch (error) {\r\n            console.log({ ...error });\r\n        }\r\n        history.push(`/admin/${content}`);\r\n    }, [])\r\n    return (\r\n        <>\r\n\r\n        </>\r\n    )\r\n}\r\n","D:\\React\\DuAnCuoiKhoa\\elearning\\src\\components\\Edit\\index.jsx",["161","162","163","164","165"],"import React, { useEffect, useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport { useStyles } from '../../HOCs/Admin/style';\r\nimport { Button, FormControl, Grid, InputLabel, MenuItem, Select, TextField, Typography } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default function EditForm({ content, id }) {\r\n    const editForm = {\r\n        category: ['id', 'title', 'icon'],\r\n        course: ['id',\r\n            'categoryId',\r\n            'content',\r\n            'description',\r\n            'discount',\r\n            'image',\r\n            'leturesCount',\r\n            'price',\r\n            'promotionPrice',\r\n            'title',\r\n        ],\r\n        role: ['id', 'name', 'description'],\r\n        target: ['id', 'title', 'courseId'],\r\n        user: ['id',\r\n            'address',\r\n            'avatar',\r\n            'fullname',\r\n            'phone',\r\n            'roleId',\r\n        ],\r\n        video: ['id',\r\n            'courseId',\r\n            'timeCount',\r\n            'title',\r\n            'url',\r\n        ]\r\n    };\r\n    const [selected, setSelected] = useState(null);\r\n    const [open, setOpen] = useState(false);\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    let form = {};\r\n\r\n    useEffect(() => {\r\n        editForm[content].map(async (input) => {\r\n            if (input.endsWith('Id')) {\r\n                try {\r\n                    const res = await axios({\r\n                        url: `http://localhost:8080/api/admin/${input.replace(\"Id\", \"\")}`,\r\n                        method: 'GET'\r\n                    })\r\n\r\n                    setSelected(res.data);\r\n                } catch (error) {\r\n                    console.log({ ...error });\r\n                }\r\n            }\r\n        })\r\n    }, [content]);\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    editForm[content].map(item => {\r\n        form = { ...form, [item]: '' }\r\n    });\r\n\r\n    const { handleChange, values, setValues } = useFormik({\r\n        initialValues: { ...form },\r\n    });\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            const res = await axios({\r\n                url: `http://localhost:8080/api/admin/${content}/${id}`,\r\n                method: 'GET'\r\n            });\r\n            setValues(res.data);\r\n        } catch (error) {\r\n            console.log({ ...error });\r\n        }\r\n    }, []);\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            const res = await axios({\r\n                url: `http://localhost:8080/api/admin/${content}/${id}`,\r\n                method: 'PUT',\r\n                data: values\r\n            });\r\n            history.push(`/admin/${content}`);\r\n        } catch (error) {\r\n            console.log({ ...error });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.addForm}>\r\n            <Typography variant='h3' component='h3'> EDIT {content.toUpperCase()} </Typography>\r\n            <form onSubmit={handleSubmit} className={classes.formAdd}>\r\n                <Grid container spacing={1}>\r\n                    {editForm[content].map(input => {\r\n                        if (input.endsWith('Id')) {\r\n                            return <Grid item xs={6}>\r\n                                <FormControl className={classes.formAdd} variant=\"outlined\">\r\n                                    <InputLabel id=\"demo-simple-select-outlined-label\">{input.replace(\"Id\", \"\")}</InputLabel>\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-outlined-label\"\r\n                                        id=\"demo-simple-select-outlined\"\r\n                                        open={open}\r\n                                        onClose={handleClose}\r\n                                        onOpen={handleOpen}\r\n                                        name={input.replace(\"Id\", \"\")}\r\n                                        onChange={handleChange}\r\n                                        label={input.replace(\"Id\", \"\")}\r\n                                    >\r\n                                        <MenuItem value=\"\">\r\n                                            <em>None</em>\r\n                                        </MenuItem>\r\n                                        {selected?.map(select =>\r\n                                            <MenuItem value={select.id} key={select.id}>\r\n                                                {select.title || select.description}\r\n                                            </MenuItem>\r\n                                        )}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>;\r\n                        } else {\r\n                            return <Grid item xs={6}>\r\n                                <TextField\r\n                                    key={input}\r\n                                    fullWidth\r\n                                    id=\"outlined-basic\"\r\n                                    label={input}\r\n                                    variant=\"outlined\"\r\n                                    onChange={handleChange}\r\n                                    name={input}\r\n                                    value={values[input]}\r\n                                    disabled={input === 'id'}\r\n                                />\r\n                            </Grid>;\r\n                        }\r\n                    })}\r\n                </Grid>\r\n                <div className={classes.middleButton}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"large\"\r\n                        className={classes.button}\r\n                        startIcon={<SaveIcon />}\r\n                        type=\"submit\"\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","D:\\React\\DuAnCuoiKhoa\\elearning\\src\\pages\\Signup\\index.jsx",["166","167"],"import React, { useCallback, useState } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useStyles } from '../../HOCs/Admin/style';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from \"yup\";\r\n\r\nconst userSchema = yup.object().shape({\r\n  email: yup.string().required('Please Enter your Email').email('Email is not valid'),\r\n  password: yup.string().required('Please Enter your password').matches(\r\n    /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\r\n    \"Password must contain at least 8 Characters, one Uppercase, one Lowercase, one Number and one special case Character\"\r\n  ),\r\n  fullname: yup.string().required('Please Enter your name').matches(/^[a-zA-Z ]+$/, \"Ten phai la chu\"),\r\n  phone: yup.string().required('Please Enter your phone').matches(/^[0-9]+$/, \"sdt phai la so\"),\r\n  address: yup.string(),\r\n});\r\n\r\nexport default function SignUp() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [isConfirm, setIsConfirm] = useState(null);\r\n\r\n  const goToSignIn = useCallback(() => {\r\n    history.push('/signin');\r\n  }, []);\r\n\r\n  const { handleChange, values, errors, isValid, handleBlur, touched } = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n      fullname: '',\r\n      address: '',\r\n      phone: '',\r\n    },\r\n    validationSchema: userSchema,\r\n    validateOnMount: true,\r\n  });\r\n\r\n  const handlePassword = useCallback((event) => {\r\n    setIsConfirm(event.target.value === values.password);\r\n  }, [setIsConfirm]);\r\n\r\n  const handleSubmit = useCallback((event) => {\r\n    event.preventDefault();\r\n\r\n    if (!isValid || !isConfirm) return;\r\n\r\n  }, [isValid, isConfirm]);\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.signupPaper}>\r\n        <Avatar className={classes.signupAvatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.signupForm} noValidate onSubmit={handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                name=\"email\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                label=\"Email\"\r\n                autoFocus\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n              />\r\n              {touched.email && errors.email && <Typography color='error'>{errors.email}</Typography>}\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                name=\"password\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n              />\r\n              {touched.password && errors.password && <Typography color='error'>{errors.password}</Typography>}\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                name=\"checkPassword\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                onChange={handlePassword}\r\n              />\r\n              {isConfirm !== null && <Typography color='error'>{isConfirm ? \"\" : \"Passwords don't match\"}</Typography>}\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                name=\"fullname\"\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                label=\"Full Name\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n              />\r\n              {touched.fullname && errors.fullname && <Typography color='error'>{errors.fullname}</Typography>}\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                name=\"address\"\r\n                label=\"Address\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                name=\"phone\"\r\n                label=\"Phone\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n              />\r\n              {touched.phone && errors.phone && <Typography color='error'>{errors.phone}</Typography>}\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.signupSubmit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Link onClick={goToSignIn} variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}","D:\\React\\DuAnCuoiKhoa\\elearning\\src\\pages\\Signin\\index.jsx",["168","169","170"],"D:\\React\\DuAnCuoiKhoa\\elearning\\src\\redux\\constants\\loginConstants.js",[],"D:\\React\\DuAnCuoiKhoa\\elearning\\src\\redux\\reducers\\login.js",[],"D:\\React\\DuAnCuoiKhoa\\elearning\\src\\components\\HeaderAdmin\\index.jsx",[],"D:\\React\\DuAnCuoiKhoa\\elearning\\src\\components\\NavbarAdmin\\index.jsx",["171"],"D:\\React\\DuAnCuoiKhoa\\elearning\\src\\components\\Header\\index.jsx",["172","173","174","175","176","177","178"],"D:\\React\\DuAnCuoiKhoa\\elearning\\src\\HOCs\\Layout\\index.jsx",[],"D:\\React\\DuAnCuoiKhoa\\elearning\\src\\HOCs\\Layout\\style.js",[],{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":4,"column":10,"nodeType":"185","messageId":"186","endLine":4,"endColumn":21},{"ruleId":"183","severity":1,"message":"187","line":4,"column":23,"nodeType":"185","messageId":"186","endLine":4,"endColumn":34},{"ruleId":"183","severity":1,"message":"188","line":5,"column":8,"nodeType":"185","messageId":"186","endLine":5,"endColumn":17},{"ruleId":"183","severity":1,"message":"189","line":6,"column":8,"nodeType":"185","messageId":"186","endLine":6,"endColumn":20},{"ruleId":"183","severity":1,"message":"190","line":10,"column":18,"nodeType":"185","messageId":"186","endLine":10,"endColumn":25},{"ruleId":"183","severity":1,"message":"187","line":2,"column":23,"nodeType":"185","messageId":"186","endLine":2,"endColumn":34},{"ruleId":"183","severity":1,"message":"191","line":7,"column":119,"nodeType":"185","messageId":"186","endLine":7,"endColumn":126},{"ruleId":"183","severity":1,"message":"192","line":7,"column":145,"nodeType":"185","messageId":"186","endLine":7,"endColumn":155},{"ruleId":"183","severity":1,"message":"193","line":7,"column":157,"nodeType":"185","messageId":"186","endLine":7,"endColumn":164},{"ruleId":"183","severity":1,"message":"194","line":88,"column":11,"nodeType":"185","messageId":"186","endLine":88,"endColumn":19},{"ruleId":"195","severity":1,"message":"196","line":100,"column":8,"nodeType":"197","endLine":100,"endColumn":17,"suggestions":"198"},{"ruleId":"195","severity":1,"message":"199","line":102,"column":15,"nodeType":"200","endLine":112,"endColumn":6},{"ruleId":"195","severity":1,"message":"201","line":118,"column":8,"nodeType":"197","endLine":118,"endColumn":10,"suggestions":"202"},{"ruleId":"183","severity":1,"message":"203","line":1,"column":8,"nodeType":"185","messageId":"186","endLine":1,"endColumn":13},{"ruleId":"183","severity":1,"message":"204","line":2,"column":17,"nodeType":"185","messageId":"186","endLine":2,"endColumn":26},{"ruleId":"183","severity":1,"message":"189","line":8,"column":8,"nodeType":"185","messageId":"186","endLine":8,"endColumn":20},{"ruleId":"183","severity":1,"message":"188","line":9,"column":8,"nodeType":"185","messageId":"186","endLine":9,"endColumn":17},{"ruleId":"183","severity":1,"message":"194","line":13,"column":11,"nodeType":"185","messageId":"186","endLine":13,"endColumn":19},{"ruleId":"205","severity":1,"message":"206","line":67,"column":35,"nodeType":"200","messageId":"207","endLine":67,"endColumn":37},{"ruleId":"195","severity":1,"message":"208","line":68,"column":20,"nodeType":"209","endLine":68,"endColumn":43},{"ruleId":"183","severity":1,"message":"210","line":88,"column":19,"nodeType":"185","messageId":"186","endLine":88,"endColumn":22},{"ruleId":"195","severity":1,"message":"211","line":97,"column":8,"nodeType":"197","endLine":97,"endColumn":17,"suggestions":"212"},{"ruleId":"195","severity":1,"message":"213","line":101,"column":8,"nodeType":"197","endLine":101,"endColumn":10,"suggestions":"214"},{"ruleId":"195","severity":1,"message":"199","line":9,"column":15,"nodeType":"200","endLine":21,"endColumn":6},{"ruleId":"195","severity":1,"message":"215","line":21,"column":8,"nodeType":"197","endLine":21,"endColumn":10,"suggestions":"216"},{"ruleId":"195","severity":1,"message":"217","line":60,"column":8,"nodeType":"197","endLine":60,"endColumn":17,"suggestions":"218"},{"ruleId":"205","severity":1,"message":"206","line":70,"column":32,"nodeType":"200","messageId":"207","endLine":70,"endColumn":34},{"ruleId":"195","severity":1,"message":"199","line":78,"column":15,"nodeType":"200","endLine":88,"endColumn":6},{"ruleId":"195","severity":1,"message":"219","line":88,"column":8,"nodeType":"197","endLine":88,"endColumn":10,"suggestions":"220"},{"ruleId":"183","severity":1,"message":"210","line":93,"column":19,"nodeType":"185","messageId":"186","endLine":93,"endColumn":22},{"ruleId":"195","severity":1,"message":"196","line":34,"column":6,"nodeType":"197","endLine":34,"endColumn":8,"suggestions":"221"},{"ruleId":"195","severity":1,"message":"222","line":50,"column":6,"nodeType":"197","endLine":50,"endColumn":20,"suggestions":"223"},{"ruleId":"183","severity":1,"message":"224","line":6,"column":8,"nodeType":"185","messageId":"186","endLine":6,"endColumn":24},{"ruleId":"183","severity":1,"message":"225","line":7,"column":8,"nodeType":"185","messageId":"186","endLine":7,"endColumn":16},{"ruleId":"195","severity":1,"message":"226","line":64,"column":6,"nodeType":"197","endLine":64,"endColumn":23,"suggestions":"227"},{"ruleId":"183","severity":1,"message":"228","line":18,"column":10,"nodeType":"185","messageId":"186","endLine":18,"endColumn":20},{"ruleId":"183","severity":1,"message":"229","line":2,"column":38,"nodeType":"185","messageId":"186","endLine":2,"endColumn":43},{"ruleId":"230","severity":1,"message":"231","line":29,"column":25,"nodeType":"232","endLine":29,"endColumn":62},{"ruleId":"233","severity":1,"message":"234","line":30,"column":29,"nodeType":"232","endLine":30,"endColumn":67},{"ruleId":"230","severity":1,"message":"231","line":32,"column":25,"nodeType":"232","endLine":32,"endColumn":60},{"ruleId":"230","severity":1,"message":"231","line":52,"column":33,"nodeType":"232","endLine":52,"endColumn":66},{"ruleId":"230","severity":1,"message":"231","line":55,"column":33,"nodeType":"232","endLine":55,"endColumn":66},{"ruleId":"230","severity":1,"message":"231","line":58,"column":33,"nodeType":"232","endLine":58,"endColumn":66},"no-native-reassign",["235"],"no-negated-in-lhs",["236"],"no-unused-vars","'useDispatch' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'Constants' is defined but never used.","'createAction' is defined but never used.","'setOpen' is assigned a value but never used.","'Toolbar' is defined but never used.","'IconButton' is defined but never used.","'Tooltip' is defined but never used.","'dispatch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["237"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useCallback has missing dependencies: 'order' and 'orderBy'. Either include them or remove the dependency array.",["238"],"'axios' is defined but never used.","'useEffect' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","Assignments to the 'form' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ObjectExpression","'res' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'history' and 'values'. Either include them or remove the dependency array.",["239"],"React Hook useCallback has a missing dependency: 'showPassword'. Either include it or remove the dependency array. You can also do a functional update 'setShowPassword(s => ...)' if you only need 'showPassword' in the 'setShowPassword' call.",["240"],"React Hook useEffect has missing dependencies: 'content', 'history', and 'id'. Either include them or remove the dependency array.",["241"],"React Hook useEffect has a missing dependency: 'editForm'. Either include it or remove the dependency array.",["242"],"React Hook useEffect has missing dependencies: 'content', 'id', and 'setValues'. Either include them or remove the dependency array.",["243"],["244"],"React Hook useCallback has a missing dependency: 'values.password'. Either include it or remove the dependency array.",["245"],"'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","React Hook useCallback has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["246"],"'Typography' is defined but never used.","'Input' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","Invalid alt value for img. Use alt=\"\" for presentational images.","no-global-assign","no-unsafe-negation",{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},"Update the dependencies array to be: [content, history]",{"range":"267","text":"268"},"Update the dependencies array to be: [order, orderBy]",{"range":"269","text":"270"},"Update the dependencies array to be: [content, history, values]",{"range":"271","text":"272"},"Update the dependencies array to be: [showPassword]",{"range":"273","text":"274"},"Update the dependencies array to be: [content, history, id]",{"range":"275","text":"276"},"Update the dependencies array to be: [content, editForm]",{"range":"277","text":"278"},"Update the dependencies array to be: [content, id, setValues]",{"range":"279","text":"280"},"Update the dependencies array to be: [history]",{"range":"281","text":"282"},"Update the dependencies array to be: [values.password]",{"range":"283","text":"284"},"Update the dependencies array to be: [dispatch, history, isValid, values]",{"range":"285","text":"286"},[3714,3723],"[content, history]",[4264,4266],"[order, orderBy]",[2894,2903],"[content, history, values]",[3005,3007],"[showPassword]",[615,617],"[content, history, id]",[1863,1872],"[content, editForm]",[2533,2535],"[content, id, setValues]",[1568,1570],"[history]",[1977,1991],"[values.password]",[2128,2145],"[dispatch, history, isValid, values]"]